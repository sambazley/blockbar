.TH BLOCKBAR 1
.SH NAME
blockbar \- Blocks based status bar for X window managers

.SH SYNOPSIS
.B blockbar
[\fIconfig_file\fR | \fB-h\fR | \fB\-\-help\fR]

.SH OPTIONS
.TP
\fIconfig_file\fR
Use the provided configuration file, rather than the default.
.TP
\fB\-h\fR, \fB--help\fR
Print the help text.

.SH CONFIG
Unless specified, blockbar looks for the configuration file in the following
places:
.IP 1
$XDG_CONFIG_HOME/blockbar/config
.IP 2
$HOME/.config/blockbar/config

.PP
The configuration file is JSON file, that has the following sections
.PP
.in +4n
.EX
{
    <General bar settings>,
    "left": [
        <Left block settings objects>,
        {
            ...
        },
        {
            ...
        },
        ...
    ],
    "right: [
        <Right block settings objects>
    ]
}
.EE
.in

.PP
The "Color" type can be either:
.IP 1
an array in the format of [r, g, b],
where r, g, and b are integers in the range of 0-255.
.IP 2
a string in the format of "#RRGGBB" or "#RGB",
where RR, GG, and BB are hexadecimal integers in the range of 0x00-0xFF.
If the string is in the format of "#RGB", the string will be interpreted as
if it was written as "#RRGGBB".

.TS
allbox tab(|);
cB s s s
cB cB cB cB
l2 lx2 l2 l.
General bar settings
Key|Description|Type|Default
height|T{
Height of the bar.
T}|Integer|22
margin-vert|T{
Margin above or below the bar.
T}|Integer|0
margin-horiz|T{
Margin on the left and right of the bar.
T}|Integer 0
padding|T{
Padding on both sides of each block.
T}|Integer|5
background|T{
Background color of the bar.
T}|Color|[0,0,0]
foreground|T{
Default text color.
T}|Color|[255,255,255]
font|T{
Font name and size.
T}|String|System default
shortlabels|T{
If true, a block's label will still be rendered if the bar is in short mode.
T}|Boolean|true
position|T{
Postion of the screen that the bar appears on. "top" or "bottom".
T}|String|"top"
traypadding|T{
Padding to the right of each tray icon.
T}|Integer|2
trayiconsize|T{
Width and height of each tray icon.
T}|Integer|18
traybar|T{
Name of output (see xrandr) that the tray should display on.
T}|String|\-
trayside|T{
Side of the bar that the tray appears on. "left" or "right".
T}|String|"right"
.TE

.TS
allbox tab(|);
cB s s s
cB cB cB cB
l2 lx2 l2 l.
Block Settings
Key|Description|Type|Default
mode|T{
Block mode, "legacy" or "subblocks".
T}|String|"legacy"
eachmon|T{
If true, the block will execute once per monitor,
BAR_OUTPUT will be set to the output's name.
T}|Boolean|false
label|T{
Static text that appears before the script output.
Only works with legacy blocks.
T}|String|""
exec|T{
Path to the executable to run.
T}|String|""
interval|T{
Time between each execution of the block's script.
If 0, the block will only execute once.
T}|Integer|0
padding|T{
Adds to the padding on both sides of the block.
T}|Integer|0
padding-inside|T{
Adds to the padding on the side of the block
closest to the centre of the bar.
T}|Integer|0
padding-outside|T{
Adds to the padding on the side of the block
furthest from the centre of the bar.
T}|Integer|0
nodiv|T{
If true, the divider next to the block, furthest from the inside of the bar
is not drawn.
T}|Boolean|false
.TE

.SH MODES
.PP
A block can have one of two modes: "legacy", and "subblocks".
.SS LEGACY
Blocks in legacy mode work similarly to blocks in i3blocks.
The standard output of the block's executable is parsed as three lines:
.IP 1
Full text
.IP 2
Short text
.IP 3
Color
.PP
Lines 2 and 3 are optional.
If the standard output is empty, the block will not be drawn.
Color should be in the format of "#RRGGBB" or "#RGB".

.SS SUBBLOCKS
For blocks in subblocks mode, the standard output of the block's executable
is parsed as a JSON string. The format of this string is:
.PP
.in +4n
.EX
{
    "subblocks":[
        <subblock objects>,
        {
            ...
        },
        {
            ...
        },
        ...
    ]
}
.EE
.in

.TS
allbox tab(#);
cB s s s
cB cB cB cB
l2 lx2 l2 l.
Subblocks data
Key#Description#Type#Default
text#T{
Text displayed in the subblock.
T}#String#""
background#T{
Background color of the subblock.
T}#Color#\-
foreground#T{
Default text color.
T}#Color#[255,255,255]
bgwidth#T{
Sets the width of the block.
Takes priority over bgxpad.
Ignored if "background" is not set.
T}#Integer#\-
bgheight#T{
Sets the height of the block.
Takes priority over bgypad.
Ignored if "background" is not set.
T}#Integer#\-
bgxpad#T{
Sets the padding to the left and right of the block.
Ignored if "background" is not set.
T}#Integer#5
bgypad#T{
Sets the padding above and below the block.
Ignored if "background" is not set.
T}#Integer#1
.TE

.SH
ENVIRONMENT VARIABLES
When the execution of a block is triggered by a click,
the following environment variables are set:
.TP
.B BLOCK_BUTTON
The mouse button's number ("1", "2", etc).
.TP
.B SUBBLOCK
If the block is in subblocks mode, this variable will be set to the clicked
subblock's index. Otherwise, this variable will be set to "0".
.TP
.B BAR_OUTPUT
If the block has eachmon=true, this variable will be set to the output's name
(see xrandr).

.SH
AUTHOR
Sam Bazley <sambazley@protonmail.com>

